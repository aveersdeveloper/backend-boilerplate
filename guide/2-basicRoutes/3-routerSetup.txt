Router Setup:
A router in Express.js is like a section of a restaurant dedicated to different 
types of dishes (routes). For example, you might have one section that handles 
drinks (routes for beverages) and another for food (routes for meals). The router 
organizes these sections, allowing different parts of your application to handle 
specific tasks.

Setting Up the Router:
In a restaurant, you donâ€™t cook directly at the table; instead, you set up the 
kitchen and cooking stations first. Similarly, in Express, you set up a router 
before defining what each route will do.

Necessary Imports:
Before we begin setting up our routes, we need to import several things from 
Express. These imports will be used as we progress through setting up and working 
with routes.

Imports:
- Router: This sets up your "kitchen" or "workstation" for creating routes.
- Request, Response, NextFunction: These are essential tools:
  - Request (req): Represents the customer's order slip with all the details of 
    what they want.
  - Response (res): The prepared dish that will be served to the customer.
  - NextFunction (next): Used when you need an additional step, like calling 
    another waiter for help.

Code Example:
-----------------------------------
import { Router, Request, Response, NextFunction } from "express";

// Set up the router
const router = Router();
-----------------------------------

Using the Router in Other Parts of the Application:
Once you've set up your router and added all your routes, you need to make it 
available to the rest of your application. Think of it as the head chef handing 
over the finished dishes to the serving staff, so they can deliver it to the 
customers.

Code Example:
-----------------------------------
export default router;
// This line allows the router to be used elsewhere, like the chef passing the 
// finished dish to the server to be delivered to the customer.
-----------------------------------

These imports will be used throughout our setup to create, handle, and manage 
routes. The router will be the main tool that organizes where different "dishes" 
(responses) are prepared and served to the customer (client).
